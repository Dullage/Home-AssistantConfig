# Automate the bathroom lights based on Adam's normal workday routine.
- alias: morning_routine_adam
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.0x00158d000208c9c8_occupancy
    to: "on"
  condition:
    condition: and
    conditions:
      - condition: time
        after: "05:00:00"
        before: "06:45:00"
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      # 2h Debounce
      - condition: template
        value_template: >
          {% set automation_name = "morning_routine_adam" %}
          {% set debounce_seconds = 7200 %}
          {{ 
            (states.automation[automation_name].attributes.last_triggered == none) 
            or (as_timestamp(state_attr('automation.' + automation_name, 'last_triggered')) < (as_timestamp(now()) - debounce_seconds))
          }}
  action:
    - service: notify.mobile_app_dullage_s_iphone
      data:
        message: "Morning routine started..."
    - wait_template: "{{ states.binary_sensor['0x00158d000208c9c8_occupancy'].state == 'on' }}"
    # Cat fed, back up to the bathroom...
    - service: light.turn_on
      entity_id: light.bathroom_lights
    - wait_template: "{{ states.binary_sensor['0x00158d000208c9c8_occupancy'].state == 'on' }}"
    # Finished showering, back down for breakfast...
    - service: light.turn_off
      entity_id: light.bathroom_lights
